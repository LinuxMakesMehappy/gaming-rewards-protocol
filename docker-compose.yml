version: '3.8'

services:
  gaming-rewards-bot:
    build:
      context: .
      dockerfile: Dockerfile
      target: production
    container_name: gaming-rewards-bot
    restart: unless-stopped
    environment:
      - NODE_ENV=production
      - SOLANA_RPC_URL=${SOLANA_RPC_URL:-https://api.devnet.solana.com}
      - BOT_PRIVATE_KEY=${BOT_PRIVATE_KEY}
      - ORACLE_PRIVATE_KEY=${ORACLE_PRIVATE_KEY}
      - STEAM_API_KEY=${STEAM_API_KEY}
      - TREASURY_PUBLIC_KEY=${TREASURY_PUBLIC_KEY}
      - SENTRY_DSN=${SENTRY_DSN}
      - LOG_LEVEL=${LOG_LEVEL:-info}
    env_file:
      - .env
    volumes:
      - ./logs:/app/logs
      - ./data:/app/data
    networks:
      - gaming-rewards-network
    healthcheck:
      test: ["CMD", "node", "-e", "console.log('Health check passed')"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    security_opt:
      - no-new-privileges:true
    read_only: true
    tmpfs:
      - /tmp
    deploy:
      resources:
        limits:
          memory: 512M
          cpus: '0.5'
        reservations:
          memory: 256M
          cpus: '0.25'

  # Development service (with source code mounted)
  gaming-rewards-bot-dev:
    build:
      context: .
      dockerfile: Dockerfile
      target: builder
    container_name: gaming-rewards-bot-dev
    restart: unless-stopped
    environment:
      - NODE_ENV=development
      - TEST_MODE=true
      - SOLANA_RPC_URL=${SOLANA_RPC_URL:-https://api.devnet.solana.com}
      - BOT_PRIVATE_KEY=${BOT_PRIVATE_KEY:-test_bot_key}
      - ORACLE_PRIVATE_KEY=${ORACLE_PRIVATE_KEY:-test_oracle_key}
      - STEAM_API_KEY=${STEAM_API_KEY:-test_steam_key}
      - TREASURY_PUBLIC_KEY=${TREASURY_PUBLIC_KEY:-test_treasury_key}
      - LOG_LEVEL=${LOG_LEVEL:-debug}
    env_file:
      - .env
    volumes:
      - .:/app
      - /app/node_modules
      - /app/bots/node_modules
      - ./logs:/app/logs
      - ./data:/app/data
    networks:
      - gaming-rewards-network
    command: ["npm", "run", "dev"]
    profiles:
      - dev
    security_opt:
      - no-new-privileges:true

  # Test service
  gaming-rewards-bot-test:
    build:
      context: .
      dockerfile: Dockerfile
      target: builder
    container_name: gaming-rewards-bot-test
    environment:
      - NODE_ENV=test
      - TEST_MODE=true
      - SOLANA_RPC_URL=https://api.devnet.solana.com
      - BOT_PRIVATE_KEY=test_bot_key
      - ORACLE_PRIVATE_KEY=test_oracle_key
      - STEAM_API_KEY=test_steam_key
      - TREASURY_PUBLIC_KEY=test_treasury_key
      - LOG_LEVEL=error
    volumes:
      - .:/app
      - /app/node_modules
      - /app/bots/node_modules
    networks:
      - gaming-rewards-network
    command: ["npm", "test"]
    profiles:
      - test
    security_opt:
      - no-new-privileges:true

  # Monitoring service (optional)
  monitoring:
    image: prom/prometheus:latest
    container_name: gaming-rewards-monitoring
    restart: unless-stopped
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    networks:
      - gaming-rewards-network
    profiles:
      - monitoring
    security_opt:
      - no-new-privileges:true

  # Grafana for visualization (optional)
  grafana:
    image: grafana/grafana:latest
    container_name: gaming-rewards-grafana
    restart: unless-stopped
    ports:
      - "3001:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_PASSWORD:-admin}
    volumes:
      - grafana_data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/etc/grafana/provisioning/dashboards
      - ./monitoring/grafana/datasources:/etc/grafana/provisioning/datasources
    networks:
      - gaming-rewards-network
    profiles:
      - monitoring
    security_opt:
      - no-new-privileges:true

volumes:
  prometheus_data:
    driver: local
  grafana_data:
    driver: local

networks:
  gaming-rewards-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
